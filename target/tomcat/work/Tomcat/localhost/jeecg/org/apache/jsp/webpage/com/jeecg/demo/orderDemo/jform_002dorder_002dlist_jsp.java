/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-04-03 06:23:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.webpage.com.jeecg.demo.orderDemo;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class jform_002dorder_002dlist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n");
      out.write("<html>\n");
      out.write("  <head>\n");
      out.write("    <base href=\"");
      out.print(basePath);
      out.write("\">    \n");
      out.write("    <title>订单管理</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"plug-in/FineUI4.0/f/f.css\" type=\"text/css\">\n");
      out.write("    <style type=\"text/css\">\n");
      out.write("    body {\n");
      out.write("\t    font-family: \"Helvetica Neue\",Helvetica,Arial,sans-serif !important;\n");
      out.write("\t    font-size: 13px !important;\n");
      out.write("\t    padding: 0;\n");
      out.write("\t    margin: 0;\n");
      out.write("\t    background-attachment: fixed;\n");
      out.write("\t    -webkit-font-smoothing: subpixel-antialiased !important;\n");
      out.write("\t}\n");
      out.write("\ttable {\n");
      out.write("\t    white-space: normal;\n");
      out.write("\t    line-height: normal;\n");
      out.write("\t    font-weight: normal;\n");
      out.write("\t    font-size: 13px !important;\n");
      out.write("\t    font-style: normal;\n");
      out.write("\t    color: -internal-quirk-inherit;\n");
      out.write("\t    text-align: start;\n");
      out.write("\t    font-variant: normal normal;\n");
      out.write("\t}\n");
      out.write("    </style>   \n");
      out.write("    <link rel=\"stylesheet\" href=\"plug-in/FineUI4.0/res/css/common.css\" type=\"text/css\">\n");
      out.write("\t<script src=\"plug-in/jquery/jquery-1.9.1.js\"></script>\n");
      out.write("\t<script type=\"text/javascript\" src=\"plug-in/FineUI4.0/f/f.js\"></script>\n");
      out.write("\t<script type=\"text/javascript\" src=\"plug-in/FineUI4.0/res/js/common.js\"></script>\n");
      out.write("  </head>\n");
      out.write("  \n");
      out.write("  <body>\n");
      out.write("    <div id=\"wrap1\"></div>\n");
      out.write("    <br />\n");
      out.write("    <div id=\"wrap2\"></div>\n");
      out.write("    <br />\n");
      out.write("    <div id=\"wrap3\"></div>\n");
      out.write("    <script>\n");
      out.write("\n");
      out.write("\t    // 打开窗体\n");
      out.write("\t    function openWindow(rowData,iframeUrl) {\n");
      out.write("\t        F.ui.window1.show(iframeUrl, '详细信息 - ' + rowData.text);\n");
      out.write("\t    }\n");
      out.write("\t    \n");
      out.write("\n");
      out.write("     F.ready(function () {  \n");
      out.write("    \t \n");
      out.write("         F.ui({\n");
      out.write("             type: 'window', id: 'window1', renderTo: '#wrap2', hidden: true, width: 1200, height: 680, iframe: true, title: '编辑', modal: false, target: '_self',\n");
      out.write("             listeners: {\n");
      out.write("                 close: function () {\n");
      out.write("                     showNotify('窗体关闭了！');\n");
      out.write("                 }\n");
      out.write("             }\n");
      out.write("         });\n");
      out.write("    \t \n");
      out.write("    \t \n");
      out.write("         F.ui({\n");
      out.write("             type: 'panel', renderTo: document.body, isViewPort: true, layout: \"region\", border: false, header: false, title: '面板一（layout=region）',\n");
      out.write("             defaults: {\n");
      out.write("                 splitWidth: 3\n");
      out.write("             },\n");
      out.write("\t\t\titems: \n");
      out.write("\t\t\t[\n");
      out.write("\t\t\t      {\n");
      out.write("\t\t\t      \t /*update-begin author:xuelin date:20171101 for:TASK #2403 【bug】【UI】fineui效果改进和参考*/\n");
      out.write("\t                 type: 'panel', layout: \"region\", flex: 1, bodyPadding: 5, height: 430, title: '订单列表', region: 'top', collapsible: true, split: true, collapsible: true\n");
      out.write("\t                 /*update-end author:xuelin date:20171101 for:TASK #2403 【bug】【UI】fineui效果改进和参考*/\n");
      out.write("\t                 ,items:\n");
      out.write("\t                 [\n");
      out.write("\t\t\t\t\t\t{\n");
      out.write("\t\t\t\t\t\t\t/*update-begin author:xuelin date:20171101 for:TASK #2403 【bug】【UI】fineui效果改进和参考*/\n");
      out.write("\t\t\t                type: 'form', region: 'top', id: 'form1', layout: 'column', bodyPadding: 5, collapsible: true, title: '订单列表', header: false,\n");
      out.write("\t\t\t                /*update-end author:xuelin date:20171101 for:TASK #2403 【bug】【UI】fineui效果改进和参考*/\n");
      out.write("\t\t\t                fieldDefaults: {\n");
      out.write("\t\t\t                    labelWidth: 70, labelAlign: 'right'\n");
      out.write("\t\t\t                },\n");
      out.write("\t\t\t                items: [{\n");
      out.write("\t\t\t                    type: 'textbox',width: 230, id: 'orderCode', fieldLabel: '订单号', marginRight: 10\n");
      out.write("\t\t\t                },{\n");
      out.write("\t\t\t                    type: 'datepicker',width: 230, id: 'orderDate', fieldLabel: '订单日期', marginRight: 10\n");
      out.write("\t\t\t                }, {\n");
      out.write("\t\t\t                    type: 'textbox',width: 230, id: 'orderMoney', fieldLabel: '订单金额', marginRight: 10\n");
      out.write("\t\t\t                }, {\n");
      out.write("\t\t\t                    type: 'textbox',width: 230, id: 'content', fieldLabel: '备注', marginRight: 10\n");
      out.write("\t\t\t                }, {\n");
      out.write("\t\t\t                    type: 'button',width: 70, text: '查询', validateForm: 'form1',\n");
      out.write("\t\t\t                    handler: function () {\n");
      out.write("\t\t\t                        F.ui.grid1.loadDataUrl(getQueryString(),{});\n");
      out.write("\t\t\t                    }\n");
      out.write("\t\t\t                }]\n");
      out.write("\t\t\t            },{\n");
      out.write("\t\t\t            \t /*update-begin author:xuelin date:20171101 for:TASK #2403 【bug】【UI】fineui效果改进和参考*/\n");
      out.write("\t\t\t\t\t\t\t type: 'grid', region: 'center', id: 'grid1', renderTo: '#wrap1', collapsible: true, header: false, emptyText: '没有数据！', sorting: true\n");
      out.write("\t\t\t\t\t\t\t /*update-end author:xuelin date:20171101 for:TASK #2403 【bug】【UI】fineui效果改进和参考*/\n");
      out.write("\t\t\t\t\t\t\t , checkboxSelect: true, paging: true, databasePaging: true, pageSize: 8\n");
      out.write("\t\t\t\t\t\t\t ,bars: [{\n");
      out.write("\t\t\t\t                    type: 'toolbar', align: 'left',\n");
      out.write("\t\t\t\t                    items: [{\n");
      out.write("\t\t\t\t                        type: 'button', text: '新增订单', icon: 'plug-in/FineUI4.0/res/icon/add.png',\n");
      out.write("\t\t\t\t                        handler: function () {\n");
      out.write("\t\t\t\t                        \tF.ui.window1.show('jformOrderMainController.do?goAddOrder', '新订单');\n");
      out.write("\t\t\t\t                            //F.ui.grid1.addNewRecord({orderCode: '新用户'}, true);\n");
      out.write("                                            F.ui.grid3.loadDataUrl();\n");
      out.write("\t\t\t\t                        }\n");
      out.write("\t\t\t\t                    }, {\n");
      out.write("\t\t\t\t                        type: 'button', text: '删除选中行', icon: 'plug-in/FineUI4.0/res/icon/delete.png',\n");
      out.write("\t\t\t\t                        handler: function () {\n");
      out.write("\t\t\t\t                            if (!F.ui.grid1.hasSelection()) {\n");
      out.write("\t\t\t\t                                F.alert('没有选中项！');\n");
      out.write("\t\t\t\t                                return false;\n");
      out.write("\t\t\t\t                            };\n");
      out.write("\t\t\t\t                            var ids = F.ui.grid1.getSelectedRows().join(',');\n");
      out.write("\t\t\t\t                            F.confirm({\n");
      out.write("\t\t\t\t                                message: '删除选中行？',\n");
      out.write("\t\t\t\t                                ok: function () {\n");
      out.write("\t\t\t\t                                \t$.ajax({\n");
      out.write("\t\t\t\t                                 \t\turl:'jformOrderMainController.do?doBatchDel',\n");
      out.write("\t\t\t\t                                 \t\tdata:{ids:ids},\n");
      out.write("\t\t\t\t                                 \t\ttype: \"POST\",\n");
      out.write("\t\t\t\t                                 \t\tsuccess:function(data){\t\n");
      out.write("\t\t\t\t                                        \tdata = JSON.parse(data);\n");
      out.write("\t\t\t\t                                            if (data.success) {\n");
      out.write("\t\t\t\t                                                F.ui.grid1.deleteSelectedRows();\n");
      out.write("\t\t\t\t                                                F.ui.grid3.loadDataUrl();\n");
      out.write("\t\t\t\t                                                F.alert(data.msg);\n");
      out.write("\t\t\t\t                \t\t\t\t\t\t\t}\n");
      out.write("\t\t\t\t                                 \t\t}         \t\t\n");
      out.write("\t\t\t\t                                 \t}); \n");
      out.write("\t\t\t\t                                }\n");
      out.write("\t\t\t\t                            });\n");
      out.write("\t\t\t\t                        }\n");
      out.write("\t\t\t\t                    }, {\n");
      out.write("\t\t\t\t                        type: 'fileupload',name:'inputFile', buttonText: '导入', buttonOnly: true, accept: 'application/vnd.ms-excel',\n");
      out.write("\t\t\t\t                        buttonConfig: {\n");
      out.write("\t\t\t\t                        \ticon: 'plug-in/FineUI4.0/res/icon/table_row_insert.png'\n");
      out.write("\t\t\t\t                        },\n");
      out.write("\t\t\t\t                        listeners: {\n");
      out.write("\t\t\t\t                            change: function () {\n");
      out.write("\t\t\t\t                            \tvar formData = new FormData();\n");
      out.write("\t\t\t\t                            \tformData.append(\"file\",$(\"input[name='inputFile']\")[0].files[0]);\t\t\t\t                            \t\n");
      out.write("\t\t\t\t                            \t$.ajax({ \n");
      out.write("\t\t\t\t                            \t\turl : 'jformOrderMainController.do?importExcel', \n");
      out.write("\t\t\t\t                            \t\ttype : 'POST', \n");
      out.write("\t\t\t\t                            \t\tdata : formData, \n");
      out.write("\t\t\t\t                            \t\t// 告诉jQuery不要去处理发送的数据\n");
      out.write("\t\t\t\t                            \t\tprocessData : false, \n");
      out.write("\t\t\t\t                            \t\t// 告诉jQuery不要去设置Content-Type请求头\n");
      out.write("\t\t\t\t                            \t\tcontentType : false,\n");
      out.write("\t\t\t\t                            \t\tbeforeSend:function(){\n");
      out.write("\t\t\t\t                            \t\t\tconsole.log(\"正在进行，请稍候\");\n");
      out.write("\t\t\t\t                            \t\t},\n");
      out.write("\t\t\t\t                            \t\tsuccess : function(data) {\n");
      out.write("\t\t\t\t\t\t                            \tdata = JSON.parse(data); \n");
      out.write("\t\t\t\t                            \t\t\tF.alert(data.msg);\t\n");
      out.write("\t\t\t\t\t                            \t\tif(data.success){\n");
      out.write("\t\t\t\t\t                            \t\t\t$(\"input[name='orderCode']\").val(\"\");\n");
      out.write("\t\t\t\t\t                                        $(\"input[name='orderDate']\").val(\"\");\n");
      out.write("\t\t\t\t\t                                        $(\"input[name='orderMoney']\").val(\"\");\n");
      out.write("\t\t\t\t\t                                        $(\"input[name='content']\").val(\"\");\n");
      out.write("\t\t\t\t\t                            \t\t\tF.ui.grid1.loadDataUrl(getQueryString(),{});\n");
      out.write("\t\t\t                                                F.ui.grid3.loadDataUrl();\n");
      out.write("\t\t\t\t\t                            \t\t}\n");
      out.write("\t\t\t\t                            \t\t}, \n");
      out.write("\t\t\t\t                            \t\terror : function(responseStr) { \n");
      out.write("\t\t\t\t                            \t\t\tconsole.log(\"responseStr\");\n");
      out.write("\t\t\t\t                            \t\t} \n");
      out.write("\t\t\t\t                            \t});\n");
      out.write("\t\t\t\t                            }\n");
      out.write("\t\t\t\t                        }\n");
      out.write("\t\t\t\t                    }, {\n");
      out.write("\t\t\t\t                        type: 'button', text: '导出', icon: 'plug-in/FineUI4.0/res/icon/application_side_expand.png',\n");
      out.write("\t\t\t\t                        handler: function () {\n");
      out.write("\t\t\t\t                        \twindow.location.href = 'jformOrderMainController.do?exportXls';\n");
      out.write("\t\t\t\t                        }\n");
      out.write("\t\t\t\t                    }, {\n");
      out.write("\t\t\t\t                        type: 'button', text: '模版下载', icon: 'plug-in/FineUI4.0/res/icon/page_white_excel.png',\n");
      out.write("\t\t\t\t                        handler: function () {\n");
      out.write("\t\t\t\t                        \twindow.location.href = 'jformOrderMainController.do?exportXlsByT';\n");
      out.write("\t\t\t\t                        }\n");
      out.write("\t\t\t\t                    }/*, '->', {\n");
      out.write("\t\t\t\t                        type: 'button', text: '重置表格数据',\n");
      out.write("\t\t\t\t                        handler: function () {\n");
      out.write("\t\t\t\t                            F.confirm({\n");
      out.write("\t\t\t\t                                message: '确定要重置表格数据？',\n");
      out.write("\t\t\t\t                                ok: function () {\n");
      out.write("\t\t\t\t                                    F.ui.grid1.rejectChanges();\n");
      out.write("\n");
      out.write("\t\t\t\t                                    F.ui.grid3.loadDataUrl();\n");
      out.write("\t\t\t\t                                }\n");
      out.write("\t\t\t\t                            });\n");
      out.write("\t\t\t\t                        }\n");
      out.write("\t\t\t\t                    }*/]\n");
      out.write("\t\t\t\t                }]\n");
      out.write("\t\t\t\t             , columns: [{\n");
      out.write("\t\t\t\t                    columnType: 'rownumberfield'\n");
      out.write("\t\t\t\t                }, {\n");
      out.write("\t\t\t\t                /*update-begin author:xuelin date:20171101 for:TASK #2403 【bug】【UI】fineui效果改进和参考*/\n");
      out.write("\t\t\t\t                    text: '订单号', field: 'orderCode', width: 150, sortable: true \n");
      out.write("\t\t\t\t                }, {\n");
      out.write("\t\t\t\t                    text: '订单日期', field: 'orderDate', width: 220, sortable: true \n");
      out.write("\t\t\t\t                }, {\n");
      out.write("\t\t\t\t                    text: '订单金额', field: 'orderMoney', width: 120, sortable: true \n");
      out.write("\t\t\t\t                /*update-end author:xuelin date:20171101 for:TASK #2403 【bug】【UI】fineui效果改进和参考*/\n");
      out.write("\t\t\t\t                }, /*{\n");
      out.write("\t\t\t\t                    text: '缩略图', field: 'ctype', width: 70, \n");
      out.write("\t\t\t\t                    renderer: function (value, params) {\n");
      out.write("\t\t\t\t                        return '<img width=\"30\" src=\"' + encodeURIComponent(value) + '\" target=\"_blank\" />';\n");
      out.write("\t\t\t\t                    }\n");
      out.write("\t\t\t\t                }, */{\n");
      out.write("\t\t\t\t                    text: '描述', field: 'content', flex:1\n");
      out.write("\t\t\t\t                },{\n");
      out.write("\t\t\t\t                    text: '编辑', width: 60,\n");
      out.write("\t\t\t\t                    renderer: function (value, params) {\n");
      out.write("\t\t\t\t                        return '<a href=\"javascript:\" id=\"editOrder\" class=\"mywindowfield\"><img src=\"plug-in/FineUI4.0/res/icon/application_edit.png\" alt=\"Edit\"/></a>';\n");
      out.write("\t\t\t\t                    }\n");
      out.write("\t\t\t\t                },{\n");
      out.write("\t\t\t\t                \ttext: '删除', width: 60, renderer: function () {\n");
      out.write("\t\t\t\t                        return '<a class=\"action-btn delete\" id=\"delOrder\" href=\"javascript:;\"><img src=\"plug-in/FineUI4.0/res/icon/decline.png\" alt=\"Delete\"/></a>';\n");
      out.write("\t\t\t\t                    }\n");
      out.write("\t\t\t\t                }],\n");
      out.write("\t\t\t\t                idField: 'id', textField: 'orderCode',\n");
      out.write("\t\t\t\t                dataUrl: getQueryString(),\n");
      out.write("\t\t\t\t                listeners: {\n");
      out.write("\t\t\t\t                    rowclick: function (event, rowId) {\n");
      out.write("\t\t\t\t                        var rowData = this.getRowData(rowId);\n");
      out.write("\t\t\t\t                        F.ui.grid3.loadDataUrl('jformOrderMainController.do?customerDataGrid&rows=8&fkId='+rowId,{});\n");
      out.write("\t\t\t\t                    }\n");
      out.write("\t\t\t\t                },\n");
      out.write("\t\t\t\t                // 模拟服务器返回的数据（真实环境中请删除此函数）也可以在这里进行数据封装操作\n");
      out.write("\t\t\t\t                dataFilter: function (data, dataType) {\t\n");
      out.write("\t\t\t\t                \t//data = JSON.parse(data); \n");
      out.write("\t\t\t\t                \t//console.info(data);\n");
      out.write("\t\t\t\t                \treturn data;\n");
      out.write("\t\t\t\t                }, \n");
      out.write("\t\t\t\t                pagingbar: {\n");
      out.write("\t\t\t\t                    type: 'pagingtoolbar',\n");
      out.write("\t\t\t\t                    items: ['-', {\n");
      out.write("\t\t\t\t                        type: 'button', text: '刷新数据', icon: 'plug-in/FineUI4.0/res/icon/reload.png',\n");
      out.write("\t\t\t\t                        handler: function () {\n");
      out.write("\t\t\t\t                            F.ui.grid1.loadDataUrl();\n");
      out.write("\t\t\t\t                        }\n");
      out.write("\t\t\t\t                    }]\n");
      out.write("\t\t\t\t                }\n");
      out.write("\t               \t\t}\n");
      out.write("\t               ]\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\t{\n");
      out.write("                 \ttype: 'grid', region: 'center', id: 'grid3', renderTo: '#wrap3', collapsible: true, title: '客户列表', emptyText: '没有数据！'\n");
      out.write("\t\t\t\t\t, checkboxSelect: true, paging: true, databasePaging: true, pageSize: 8, showSelectedCell: true, cellEditing: true, cellEditingClicks: 2\n");
      out.write("\t\t\t\t\t, idField: 'id', textField: 'orderCode'\n");
      out.write("\t                , dataUrl: ''\n");
      out.write("\t                ,listeners: {\n");
      out.write("\t                    /*datachange: function () {\n");
      out.write("\t                        var grid3 = F.ui.grid3;\n");
      out.write("\t                        var button1 = F.ui.button1;\n");
      out.write("\n");
      out.write("\t                        // 如果没有删除行，没有新增行，没有修改的数据\n");
      out.write("\t                        if (!grid1.getModifiedData().length) {\n");
      out.write("\t                            button1.disable();\n");
      out.write("\t                        } else {\n");
      out.write("\t                            button1.enable();\n");
      out.write("\t                        }\n");
      out.write("\t                    }*/\n");
      out.write("\t                }\n");
      out.write("\t                , columns: [{\n");
      out.write("\t                    columnType: 'rownumberfield'\n");
      out.write("\t                }, {\n");
      out.write("                    \tfield: 'id', hidden: true\n");
      out.write("                    },{\n");
      out.write("                    \tfield: 'fkId', hidden: true\n");
      out.write("                    }, {\n");
      out.write("\t                    text: '姓名', field: 'name', width: 100, editable: true,\n");
      out.write("                        editor: {\n");
      out.write("                            type: 'textbox', required: true\n");
      out.write("                        }\n");
      out.write("\t                }, {\n");
      out.write("\t                    text: '性别', field: 'sex', width: 60, editable: true,\n");
      out.write("                        renderer: function (value) {\n");
      out.write("                            return value == 1 ? '男' : '女';\n");
      out.write("                        },\n");
      out.write("                        editor: {\n");
      out.write("                            type: 'dropdownlist', required: true, editable: true,\n");
      out.write("                            data: [['1', '男'], ['0', '女']]\n");
      out.write("                        }\n");
      out.write("\t                }, {\n");
      out.write("\t                    text: '电话', field: 'telphone', width: 120, editable: true,\n");
      out.write("                        editor: {\n");
      out.write("                            type: 'textbox', required: true\n");
      out.write("                        }\n");
      out.write("\t                }, {\n");
      out.write("\t                    text: '金额', field: 'money', width: 150, flex:1, editable: true,\n");
      out.write("                        editor: {\n");
      out.write("                            type: 'textbox', required: true\n");
      out.write("                        }\n");
      out.write("\t                }, {\n");
      out.write("\t                    text: '证件预览', field: 'sfPic', hidden: true\n");
      out.write("\t                }/*,{//子表数据操作部分，随主表操作同时进行，省去该部分功能，若有特殊需要放开\n");
      out.write("\t                    text: '编辑', width: 60,\n");
      out.write("\t                    renderer: function (value, params) {\n");
      out.write("\t                        return '<a href=\"javascript:;\" id=\"editCustomer\" class=\"mywindowfield\"><img src=\"plug-in/FineUI4.0/res/icon/application_edit.png\" alt=\"Edit\"/></a>';\n");
      out.write("\t                    }\n");
      out.write("\t                },{\n");
      out.write("\t                \ttext: '删除', width: 60, renderer: function () {\n");
      out.write("\t                        return '<a id=\"delCustomer\" class=\"action-btn delete\" href=\"javascript:;\"><img src=\"plug-in/FineUI4.0/res/icon/decline.png\" alt=\"Delete\"/></a>';\n");
      out.write("\t                    }\n");
      out.write("\t                }*/]\n");
      out.write("\t                ,pagingbar: {\n");
      out.write("\t                    type: 'pagingtoolbar',\n");
      out.write("\t                    items: ['-', {\n");
      out.write("\t                        type: 'button', id: 'commitBtn', text: '提交修改', \n");
      out.write("\t                        handler: function () {\n");
      out.write("\t                            var grid3 = F.ui.grid3;\n");
      out.write("\t                            if (grid3.getModifiedData().length>0) {\n");
      out.write("\t                            \t\n");
      out.write("\t                            \tvar formData = new FormData();\t                                \n");
      out.write("\t                                //封装jformOrderMainPage.jformOrderCustomerList\n");
      out.write("\t                                var customerList = new Array();\n");
      out.write("\t                                $(grid3.getModifiedData()).each(function (i,obj){\n");
      out.write("                                    \tvar customer = grid3.getRowValue(obj.id);\n");
      out.write("                                    \tfor(var name in customer){\n");
      out.write("                                    \t\tformData.append(\"jformOrderCustomerList[\"+customerList.length+\"].\"+name,customer[name]);\n");
      out.write("                                        }   \n");
      out.write("                                    \tcustomerList.push(customer); \n");
      out.write("\t                                });\n");
      out.write("\t                                $.ajax({ \n");
      out.write("\t        \t                        url : 'jformOrderMainController.do?doUpdateCustomer', \n");
      out.write("\t        \t                        type : 'POST', \n");
      out.write("\t        \t                        data : formData, \n");
      out.write("\t        \t                        processData : false, \n");
      out.write("\t        \t                        contentType : false,\n");
      out.write("\t        \t                        beforeSend:function(){\n");
      out.write("\t        \t                        \t//console.log(\"正在进行，请稍候\");\n");
      out.write("\t        \t                        },\n");
      out.write("\t        \t                        success : function(data) {\t\n");
      out.write("\t        \t                        \tdata = JSON.parse(data); \n");
      out.write("\t        \t                        \tF.alert(data.msg);\n");
      out.write("\t        \t                        \tif(data.success){\n");
      out.write("\t        \t\t                            grid3.commitChanges();\n");
      out.write("\t        \t                        \t}\t                        \t\n");
      out.write("\t        \t                        }, \n");
      out.write("\t        \t                        error : function(responseStr) { \n");
      out.write("\t        \t                        \tconsole.log(\"error\");\n");
      out.write("\t        \t                        } \n");
      out.write("\t                                }); \n");
      out.write("\t                            \t\n");
      out.write("\t                            }else{\n");
      out.write("\t                            \tF.alert(\"未修改任何数据\");\n");
      out.write("\t                            }\n");
      out.write("\t                            /* if (!grid1.getModifiedData().length) {\n");
      out.write("\t                                button1.disable();\n");
      out.write("\t                            } else {\n");
      out.write("\t                                button1.enable();\n");
      out.write("\t                            } */\n");
      out.write("\t                            //\"status\": \"modified\",\n");
      out.write("\t                            // 提交数据后，重新禁用提交按钮\n");
      out.write("\t                            //F.ui.commitBtn.disable();\n");
      out.write("\t                        }\n");
      out.write("\t                    }]\n");
      out.write("\t                }\n");
      out.write("\t                /*,bars: [{\n");
      out.write("\t                    type: 'toolbar', align: 'left',\n");
      out.write("\t                    items: [{\n");
      out.write("\t                        type: 'button', text: '新增数据', icon: 'plug-in/FineUI4.0/res/icon/add.png',\n");
      out.write("\t                        handler: function () {\n");
      out.write("\t                            //F.ui.grid3.addNewRecord({name: '新用户'}, true);\n");
      out.write("\t                        }\n");
      out.write("\t                    }, {\n");
      out.write("\t                        type: 'button', text: '删除选中行', icon: 'plug-in/FineUI4.0/res/icon/delete.png',\n");
      out.write("\t                        handler: function () {\n");
      out.write("\t                            if (!F.ui.grid3.hasSelection()) {\n");
      out.write("\t                                F.alert('没有选中项！');\n");
      out.write("\t                                return false;\n");
      out.write("\t                            };\n");
      out.write("\n");
      out.write("\t                            F.confirm({\n");
      out.write("\t                                message: '删除选中行？',\n");
      out.write("\t                                ok: function () {\n");
      out.write("\t                                    F.ui.grid3.deleteSelectedRows();\n");
      out.write("\t                                }\n");
      out.write("\t                            });\n");
      out.write("\t                        }\n");
      out.write("\t                    }, '->', {\n");
      out.write("\t                        type: 'button', text: '重置表格数据',\n");
      out.write("\t                        handler: function () {\n");
      out.write("\t                            F.confirm({\n");
      out.write("\t                                message: '确定要重置表格数据？',\n");
      out.write("\t                                ok: function () {\n");
      out.write("\t                                    F.ui.grid3.rejectChanges();\n");
      out.write("\t                                }\n");
      out.write("\t                            });\n");
      out.write("\t                        }\n");
      out.write("\t                    }]\n");
      out.write("\t                }]*/\n");
      out.write("            \t}/*, \n");
      out.write("            \t{\n");
      out.write("                 \ttype: 'panel', bodyPadding: 5, title: '', region: 'bottom', collapsible: true, split: true, html: ''\n");
      out.write("            \t}*/\n");
      out.write("          ]\n");
      out.write("         });\n");
      out.write("         \n");
      out.write("         var grid1 = F.ui.grid1;\n");
      out.write("         // 点击表格行中的编辑按钮\n");
      out.write("         grid1.el.on('click', '#editOrder', function (event) {\n");
      out.write("             var rowEl = $(this).closest('.f-grid-row');\n");
      out.write("             var rowData = grid1.getRowData(rowEl);\n");
      out.write(" \t         var iframeUrl = 'jformOrderMainController.do?goEditOrder&id='+rowData.id;\n");
      out.write("             openWindow(rowData,iframeUrl);\n");
      out.write("         });\n");
      out.write("         \n");
      out.write("      \t// 初始化表格内删除按钮事件\n");
      out.write("         grid1.el.on('click', '#delOrder', function () {\n");
      out.write("             var targetEl = $(this);\n");
      out.write("             var rowEl = targetEl.parents('.f-grid-row');\n");
      out.write("             var rowData = grid1.getRowData(rowEl);\n");
      out.write("\n");
      out.write("             F.confirm({\n");
      out.write("                 message: '删除选中行？',\n");
      out.write("                 ok: function () {                \t \n");
      out.write("                 \t$.ajax({\n");
      out.write("                 \t\turl:'jformOrderMainController.do?doDel',\n");
      out.write("                 \t\tdata:{id:rowData.id},\n");
      out.write("                 \t\ttype: \"POST\",\n");
      out.write("                 \t\tsuccess:function(data){\t\n");
      out.write("                        \tdata = JSON.parse(data);\n");
      out.write("                            if (data.success) {\n");
      out.write("                                grid1.deleteRow(rowData.id);\n");
      out.write("                                F.ui.grid3.loadDataUrl();\n");
      out.write("                                F.alert(data.msg);\n");
      out.write("\t\t\t\t\t\t\t}\n");
      out.write("                 \t\t}         \t\t\n");
      out.write("                 \t}); \n");
      out.write("                 }\n");
      out.write("             });\n");
      out.write("         });\n");
      out.write("      \t\n");
      out.write("      \t\n");
      out.write("       //子表数据操作部分，随主表操作同时进行，省去该部分功能，若有特殊需要放开\n");
      out.write("/*        var grid3 = F.ui.grid3;\n");
      out.write("         // 点击表格行中的编辑按钮\n");
      out.write("         grid3.el.on('click', '#editCustomer', function (event) {\n");
      out.write("             var rowEl = $(this).closest('.f-grid-row');\n");
      out.write("             var rowData = grid3.getRowData(rowEl);\n");
      out.write("             var iframeUrl = 'jformOrderMainController.do?goUpdate';\n");
      out.write("             openWindow(rowData,iframeUrl);\n");
      out.write("         });\n");
      out.write("         \n");
      out.write("      \t// 初始化表格内删除按钮事件\n");
      out.write("         grid3.el.on('click', '#delCustomer', function () {\n");
      out.write("             var targetEl = $(this);\n");
      out.write("             var rowEl = targetEl.parents('.f-grid-row');\n");
      out.write("             var rowData = grid3.getRowData(rowEl);\n");
      out.write("\n");
      out.write("             F.confirm({\n");
      out.write("                 message: '删除选中行？',\n");
      out.write("                 ok: function () {\n");
      out.write("                     grid3.deleteRow(rowData.id);\n");
      out.write("                 }\n");
      out.write("             });\n");
      out.write("         });\n");
      out.write("      \t */\n");
      out.write(" \n");
      out.write("      \t /**\n");
      out.write("      \t * 生成查询url\n");
      out.write("      \t */\n");
      out.write("       \t function getQueryString(){\n");
      out.write("      \t\t //因页面加载时FineUI并未完成，这里采用jquery选择器\n");
      out.write("    \t\t var orderCode = $(\"input[name='orderCode']\").val();\n");
      out.write("             var orderDate = $(\"input[name='orderDate']\").val();\n");
      out.write("             var orderMoney = $(\"input[name='orderMoney']\").val();\n");
      out.write("             var content = $(\"input[name='content']\").val();\n");
      out.write("            \n");
      out.write("             var url = 'jformOrderMainController.do?orderDataGrid&rows=8';//为配合原系统的datagrid对象，手动传参row = 每页显示行数\n");
      out.write("             url += \"&orderCode=\"+orderCode+\"&orderDate=\"+orderDate+\"&orderMoney=\"+orderMoney+\"&content=\"+content;\n");
      out.write("             url = url.replace(/=undefined/g,\"=\");\n");
      out.write("             return url;\n");
      out.write("    \t }\n");
      out.write("\n");
      out.write("     });\n");
      out.write("    </script>\n");
      out.write("  </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
