/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-04-01 02:42:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.webpage.com.jeecg.wuyecbgl;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class wuyeCbglDbcbjlZtree_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/tld/easyui.tld", Long.valueOf(1521446129221L));
    _jspx_dependants.put("/context/mytags.jsp", Long.valueOf(1521446129245L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ft_005fbase_0026_005ftype_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ft_005fbase_0026_005ftype_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005ft_005fbase_0026_005ftype_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
 
String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path;

      out.write('\n');
      //  c:set
      org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /context/mytags.jsp(9,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("webRoot");
      // /context/mytags.jsp(9,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(basePath);
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
        return;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>管理区域</title>\r\n");
      if (_jspx_meth_t_005fbase_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"plug-in/ztree/css/zTreeStyle.css\" type=\"text/css\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"plug-in/ztree/js/jquery.ztree.core-3.5.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"plug-in/ztree/js/ztreeCreator.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"easyui-layout\" fit=\"true\" scroll=\"no\">\r\n");
      out.write("\t\t<div  data-options=\"region:'west',title:'管理区域设置',split:true\" style=\"width:200px;overflow: auto;\">\r\n");
      out.write("\t        <div id=\"orgTree\" class=\"ztree\"></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div data-options=\"region:'center',border:false\" style=\"text-align: center;\">\r\n");
      out.write("\t\t\t \t<iframe id=\"listFrame\" src=\"\"  frameborder=\"no\" width=\"100%\" height=\"100%\"></iframe>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("<script>\r\n");
      out.write("//加载树\r\n");
      out.write("var orgTree ;\r\n");
      out.write("var zNodes;\r\n");
      out.write("function loadTree() {\t\r\n");
      out.write("\tjQuery.ajax({  \r\n");
      out.write("        async : false,  \r\n");
      out.write("        cache:false,  \r\n");
      out.write("        type: 'POST',  \r\n");
      out.write("        dataType : \"json\",  \r\n");
      out.write("        url: 'wuyeCbglDbcbjlController.do?getTreeData1', //请求的action路径  \r\n");
      out.write("        error: function () {//请求失败处理函数  \r\n");
      out.write("            alert('请求失败');  \r\n");
      out.write("        },  \r\n");
      out.write("        success:function(data){ //请求成功后处理函数。\r\n");
      out.write("\t\t\tconsole.log(data.obj)\r\n");
      out.write("            zNodes = data.obj;   //把后台封装好的简单Json格式赋给zNodes  \r\n");
      out.write("        }  \r\n");
      out.write("    });  \r\n");
      out.write("\tvar ztreeCreator = new ZtreeCreator('orgTree',\"wuyeCbglDbcbjlController.do?getTreeData1\",zNodes)\r\n");
      out.write(" \t\t\t.setCallback({onClick:zTreeOnLeftClick,onRightClick:zTreeOnRightClick})\r\n");
      out.write(" \t\t\t.initZtree({},3,function(treeObj){orgTree = treeObj});\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("//左击\r\n");
      out.write("function zTreeOnLeftClick(event, treeId, treeNode) {\r\n");
      out.write("\tcurSelectNode = treeNode;\r\n");
      out.write("\tvar parentId = treeNode.id;\r\n");
      out.write("\tvar url = \"wuyeCbglDbcbjlController.do?list&id=\" + curSelectNode.id;\r\n");
      out.write("/* \tif(curSelectNode.parentId==\"0\"){\r\n");
      out.write("\t\t$.topCall.warn('该节点为根节点，请点击具体的组织');\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t} */\r\n");
      out.write(" \tfor(var i=0;i<zNodes.length;i++){\r\n");
      out.write("\t\tif(parentId==zNodes[i].parentId){\t\t\t\r\n");
      out.write("\t\t\t$(\"#listFrame\").attr(\"src\",\"\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t} \r\n");
      out.write("\t$(\"#listFrame\").attr(\"src\", url);\r\n");
      out.write("};\r\n");
      out.write("/**\r\n");
      out.write(" * 树右击事件\r\n");
      out.write(" */\r\n");
      out.write("function zTreeOnRightClick(e, treeId, treeNode) {\t\r\n");
      out.write("\tif (treeNode) {\r\n");
      out.write("\t\torgTree.selectNode(treeNode);\r\n");
      out.write("\t\tcurSelectNode=treeNode;\r\n");
      out.write("\t\tvar isfolder = treeNode.isFolder;\r\n");
      out.write("\t\tvar h = $(window).height();\r\n");
      out.write("\t\tvar w = $(window).width();\r\n");
      out.write("\t\tvar menuWidth = 120;\r\n");
      out.write("\t\tvar menuHeight = 75;\r\n");
      out.write("\t\tvar menu = null;\r\n");
      out.write("\t\tif (treeNode != null) {\r\n");
      out.write("\t\t\tmenu = $('#orgMenu');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar x = e.pageX, y = e.pageY;\r\n");
      out.write("\t\tif (e.pageY + menuHeight > h) {\r\n");
      out.write("\t\t\ty = e.pageY - menuHeight;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tif (e.pageX + menuWidth > w) {\r\n");
      out.write("\t\t\tx = e.pageX - menuWidth;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tmenu.menu('show', {\r\n");
      out.write("\t\t\tleft : x,\r\n");
      out.write("\t\t\ttop : y\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("};\r\n");
      out.write("//菜单对应项\r\n");
      out.write("function menuHandler(item) {\r\n");
      out.write("\tif ('add' == item.name) {\r\n");
      out.write("\t\taddNode();\r\n");
      out.write("\t} else if ('remove' == item.name) {\r\n");
      out.write("\t\tdelNode();\r\n");
      out.write("\t} else if ('sort' == item.name) {\r\n");
      out.write("\t\tsortNode();\r\n");
      out.write("\t} else if ('edit' == item.name) {\r\n");
      out.write("\t\teditNode(1);\r\n");
      out.write("\t} else if ('fresh' == item.name) {\r\n");
      out.write("\t\trefreshNode();\r\n");
      out.write("\t}\r\n");
      out.write("};\r\n");
      out.write("function refreshNode() {\r\n");
      out.write("\tloadTree();\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("//添加节点\r\n");
      out.write("function addNode() {\r\n");
      out.write("\tvar selectNode = getSelectNode();\r\n");
      out.write("\tif (!selectNode) \treturn;\r\n");
      out.write("\tvar url = \"departController.do?add&id=\" + selectNode.id;\r\n");
      out.write("\t$(\"#listFrame\").attr(\"src\", url);\r\n");
      out.write("\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("//编辑节点\r\n");
      out.write("function editNode(type) {\r\n");
      out.write("\tvar selectNode = getSelectNode();\r\n");
      out.write("\tif (!selectNode) \treturn;\r\n");
      out.write("\t//根节点 不能编辑\r\n");
      out.write("\tif(selectNode.id==\"0\" && type==1 ){\r\n");
      out.write("\t\t$.topCall.warn('该节点为根节点，不可编辑');\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tvar url = \"departController.do?update&id=\" + selectNode.id;\r\n");
      out.write("\t$(\"#listFrame\").attr(\"src\", url);\r\n");
      out.write("\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//删除\r\n");
      out.write("function delNode() {\r\n");
      out.write("\tvar selectNode = getSelectNode();\r\n");
      out.write("\tvar nodeId = selectNode.id;\r\n");
      out.write("\tif (nodeId == \"0\") {\r\n");
      out.write("\t\t$.topCall.warn('该节点为根节点，不可删除');\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t} \r\n");
      out.write("\tvar url = \"jeecgFormDemoController.do?del&id=\"+nodeId;\r\n");
      out.write("\tif(!confirm('温馨提示', '确定删除该组织以及该组织下的所有子组织？')){\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tjQuery.ajax({  \r\n");
      out.write("        async : false,  \r\n");
      out.write("        cache:false,  \r\n");
      out.write("        type: 'GET',  \r\n");
      out.write("        dataType : \"json\",  \r\n");
      out.write("        url: url,//请求的action路径  \r\n");
      out.write("        error: function () {//请求失败处理函数  \r\n");
      out.write("            alert('请求失败');  \r\n");
      out.write("        },  \r\n");
      out.write("        success:function(data){ //请求成功后处理函数。\r\n");
      out.write("\t\t    if(data.success){\r\n");
      out.write("\t\t    \torgTree.removeNode(selectNode);\r\n");
      out.write("\t\t\t\t$(\"#listFrame\").attr(\"src\", \"about:blank\");\r\n");
      out.write("\t\t    }else{\r\n");
      out.write("\t\t    \talert(data.msg);\r\n");
      out.write("\t\t    }\r\n");
      out.write("        }  \r\n");
      out.write("    });  \r\n");
      out.write("\t\r\n");
      out.write("};\r\n");
      out.write("//选择资源节点。\r\n");
      out.write("function getSelectNode() {\r\n");
      out.write("\torgTree = $.fn.zTree.getZTreeObj(\"orgTree\");\r\n");
      out.write("\tvar nodes = orgTree.getSelectedNodes();\r\n");
      out.write("\tvar node = nodes[0];\r\n");
      out.write("\treturn node;\r\n");
      out.write("};\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\tloadTree();\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_t_005fbase_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  t:base
    org.jeecgframework.tag.core.easyui.BaseTag _jspx_th_t_005fbase_005f0 = (org.jeecgframework.tag.core.easyui.BaseTag) _005fjspx_005ftagPool_005ft_005fbase_0026_005ftype_005fnobody.get(org.jeecgframework.tag.core.easyui.BaseTag.class);
    _jspx_th_t_005fbase_005f0.setPageContext(_jspx_page_context);
    _jspx_th_t_005fbase_005f0.setParent(null);
    // /webpage/com/jeecg/wuyecbgl/wuyeCbglDbcbjlZtree.jsp(7,0) name = type type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_t_005fbase_005f0.setType("jquery,easyui");
    int _jspx_eval_t_005fbase_005f0 = _jspx_th_t_005fbase_005f0.doStartTag();
    if (_jspx_th_t_005fbase_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ft_005fbase_0026_005ftype_005fnobody.reuse(_jspx_th_t_005fbase_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005ft_005fbase_0026_005ftype_005fnobody.reuse(_jspx_th_t_005fbase_005f0);
    return false;
  }
}
